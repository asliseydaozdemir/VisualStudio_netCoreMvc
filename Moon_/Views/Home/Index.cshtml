@model PagedList.Core.IPagedList<Moon.Entities.Files>

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Home Page";
}
@addTagHelper *, ReflectionIT.Mvc.Paging

<!DOCTYPE html>
<html>
<head runat="server">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="~/HomeStyles/css/index.css" type="text/css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script type="text/javascript">
        function preventBack() { window.history.forward(); }
        setTimeout("preventBack()", 0);
        window.onunload = function () { null };
    </script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>
<body>

    <!-- !PAGE CONTENT! -->
    <div class="row">
        <div class="column" style="background-color:#aaa;">
            <table id="dtable" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr class="table-striped" style="background-color:aliceblue">
                        <th>Title</th>
                        <th>Course</th>
                        <th>Lecturer</th>
                        <th>Owner</th>
                        <th><a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Date</a></th>
                        <th>Like</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="table-condensed">
                            <td class="tab-content">
                                <a asp-action="DisplayPDF" asp-route-id="@item.DocumentId">@Html.DisplayFor(modelItem => item.Title)</a>
                            </td>
                            <td class="tab-content">
                                <a>@Html.DisplayFor(modelItem => item.CourseCode)-@Html.DisplayFor(modelItem => item.Category)</a>
                            </td>
                            <td class="tab-content">
                                @Html.DisplayFor(modelItem => item.Lecturer)
                            </td>
                            <td class="tab-content">
                                @Html.DisplayFor(modelItem => item.ownerId)
                            </td>
                            <td class="tab-content">
                                @Html.DisplayFor(modelItem => item.CreatedOn)
                            </td>
                            <td class="tab-content">
                                @Html.DisplayFor(modelItem => item.Likes)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }

            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageNumber - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageNumber + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="column" style="background-color:#ddd;">
                <form asp-action="Index" method="post">
                    <div class="wrapper">
                        <div class="form-group">
                            <label class="control-label">Course Code</label>
                            <div class="col-md-6">
                                @Html.DropDownList("CourseCodeDrop", ViewBag.CourseCode as SelectList, htmlAttributes: new { @class = "form-control", @id = "courseSec" })
                            </div>
                            <input name="GroupValue" accesskey="GroupValue" id="GroupValue" placeholder="search a category number.." />
                        </div>
                    </div>
                    <div class="row-group-2">
                        <div class="form-actions no-color">
                            <input value="Search" type="submit" class="btn btn-block" />
                            <a asp-action="Index">Back to Full List</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    }
    <script>
        function myFunction(x) {
            x.classList.toggle("fa-thumbs-down");
        }
    </script>
</body>
</html>